{"version":3,"sources":["../../src/pages/leaderboard/globalLeaderboard/globalLeaderboard.module.ts","../../src/pages/leaderboard/leaderboard.ts","../../src/pages/leaderboard/globalLeaderboard/globalLeaderboard.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { GlobalLeaderboard } from './globalLeaderboard';\n\n@NgModule({\n  declarations: [\n    GlobalLeaderboard,\n  ],\n  imports: [\n    IonicPageModule.forChild(GlobalLeaderboard),\n  ],\n})\nexport class GlobalLeaderboardPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/leaderboard/globalLeaderboard/globalLeaderboard.module.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { UserFactory, user } from '../../providers/userfactory';\n\n/**\n * Generated class for the GlobalLeaderboardPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@Component({})\nexport class Leaderboard {\n\n    globallyRankedUsers: any [] = [null]\n    locallyRankedUsers: any [] = [null]\n    allusers : user[];\n\n  constructor(public navCtrl: NavController, private AllUsers: user[]) \n  {\n    this.allusers = AllUsers;\n    //this.allusers.reverse();\n    console.log(this.allusers)\n    //*this.readDatabase();\n    this.loadUsers();\n  }\n  \n  loadUsers(){\n    if(this.allusers.length < 15){\n        for(let x = 0; x < this.allusers.length; x++){\n            this.globallyRankedUsers[x] = this.allusers[x];\n            this.locallyRankedUsers[x] = this.allusers[x];\n            this.globallyRankedUsers[x].leaderboardRank = x+1;\n            this.locallyRankedUsers[x].leaderboardRank = x+1;\n        }\n    }\n    else{\n        for(let x = 0; x < 15; x++){\n            this.globallyRankedUsers[x] = this.allusers[x];\n            this.globallyRankedUsers[x].leaderboardRank = x+1;\n        }\n        for(let x = 15; x < this.allusers.length; x++){\n            this.locallyRankedUsers[x-15] = this.allusers[x];\n            this.locallyRankedUsers[x-15].leaderboardRank = x-14;\n        }\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/leaderboard/leaderboard.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { Leaderboard } from '../leaderboard';\nimport { UserFactory, user } from '../../../providers/userfactory';\n\n/**\n * Generated class for the Tab1Page page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'globalLeaderboard',\n  templateUrl: 'globalLeaderboard.html',\n})\nexport class GlobalLeaderboard {\n  leaderboard: Leaderboard;\n  users:any;\n  user_list: user[];\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private UserFactory: UserFactory) \n  {\n    this.user_list = [];\n  }\n\n  ionViewDidLoad() \n  {\n    this.UserFactory.getJSON().subscribe\n            (res => \n                {\n                     console.log(res);\n                     for (let i = 0; i <res.length; i++)\n                     {\n                         var obj = JSON.parse(JSON.stringify(res[i]));\n                         var User: user =  \n                             {\n                                 username : obj.username,\n                                 points : obj.totalPoints,\n                                 leaderboardRank: 0\n         \n                             };\n                         this.user_list.push(User);\n                         \n                     }\n                    \n                     console.log(this.user_list);\n                     this.leaderboard = new Leaderboard(this.navCtrl, this.user_list);\n                     this.users = this.leaderboard.globallyRankedUsers;\n                     console.log('ionViewDidLoad GlobalLeaderboard');\n                    \n                 });\n  }\n\n  getLeaderboardDisplay(rank){\n    if(rank <= 3)\n      return ` ${this.users[rank-1].username}`;\n    else\n      return `${this.users[rank-1].leaderboardRank}. ${this.users[rank-1].username}`;\n  }\n\n  getColor(rank){\n    if(rank === 1) return \"gold\";\n    else if(rank === 2) return \"silver\";\n    else if(rank === 3) return \"bronze\";\n    else return \"others\";\n  }\n\n  getIcon(rank){\n    if(rank <= 3)\n      return \"trophy\";\n    else return null;\n  }\n\n  formatNumber(n){\n    return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  viewLocal(){\n    this.navCtrl.setRoot('DivisionalLeaderboard');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/leaderboard/globalLeaderboard/globalLeaderboard.ts"],"sourceRoot":""}