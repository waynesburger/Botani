{"version":3,"sources":["../../src/pages/map/map.module.ts","../../src/pages/map/map.ts","../../node_modules/rxjs/add/operator/filter.js"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { BotaniMap } from './map';\n\n@NgModule({\n  declarations: [\n    BotaniMap,\n  ],\n  imports: [\n    IonicPageModule.forChild(BotaniMap),\n  ],\n})\nexport class BotaniMapModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/map/map.module.ts","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { NavController, ToastController, IonicPage } from 'ionic-angular';\nimport { Geolocation } from '@ionic-native/geolocation';\nimport { TreeFactory, sapling } from '../../providers/treefactory';\nimport { Graphs } from '../dataCollection/dataCollection';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport { AlertController } from 'ionic-angular/components/alert/alert-controller';\n\ndeclare var google;\n\n@IonicPage()\n\n@Component({\n    selector: 'map',\n    templateUrl: 'map.html'\n})\n\nexport class BotaniMap {\n\n    @ViewChild('map') mapContainer: ElementRef;  //reference the html component names #map\n\n    map: any;             //the map object\n    mapBounds: any;       //the boundaries of the playing field\n    areaCenter: any;      //the center of the playng field\n    userLoc: userPair;\n    userMark: any;        //the marker that shows the users location\n    locWatcher: any;      //variable that holds the promise that resolves the users location\n    tree_list: Tree[];\n    saplings: sapling[];\n\n    //initial setup-------------------------------------------------------------------------------------------------\n    //the constructor initializes the center and boundaries of the playing field\n    constructor(public navCtrl: NavController, public geolocation: Geolocation, private TreeFactory: TreeFactory,\n        private alertCtrl: AlertController, private toastCtrl: ToastController) {\n        this.areaCenter = new google.maps.LatLng(47.002927, -120.537427);\n\n        this.mapBounds = new google.maps.LatLngBounds(\n            new google.maps.LatLng(46.999761, -120.543179),\n            new google.maps.LatLng(47.010421, -120.531785)\n        );\n        this.tree_list = [];\n        this.saplings = [];\n        this.userLoc =\n            {\n                lat: 0,\n                long: 0\n            }\n\n\n    }\n\n\n    //planTrees loops through a list of saplings and turns them into trees\n    plantTrees(saplings: sapling[]) {\n        //Loops through list\n        for (let i = 0; i < saplings.length; i++) {\n            //and pushes instanciated objects onto the tree_list\n            this.tree_list.push(new Tree(saplings[i].lat, saplings[i].long, this.wrapTrees(saplings[i]), saplings[i].special, saplings[i].hidden));\n        }\n    }\n\n    //This recursive method wraps the tree object in its decorator classes\n    //The decorator list of each sapling is treated like a stack\n    //The top element is popped off and used to create the \n    wrapTrees(target: sapling): DecoratorTree {\n        //Base case\n        //Sets innermost decorator class's child to null\n        if (target.decs.length === 0) {\n            return null;\n        }\n        //Recursive case \n        //Wrapping still reqruied \n        /*------NEW DECORATORS MUST BE ADDED TO THIS SWITCH------*/\n        switch (target.decs.pop()) {\n            case 'fl':\n                return new FallingTree(this.wrapTrees(target));\n            case 'fw':\n                return new FloweringTree(this.wrapTrees(target));\n            case 'fr':\n                return new FrutingTree(this.wrapTrees(target));\n            case 'pn':\n                return new PineConeTree(this.wrapTrees(target));\n        }\n    }\n\n    //when map element is ready--------------------------------------------------------------------------------------\n    // the map itself won't be initialized until the view is ready  \n    ionViewDidLoad() {\n        console.log(\"here 1\")\n        this.TreeFactory.getJSON().subscribe(res => {\n            console.log(res);\n            for (let i = 0; i < res.length; i++) {\n                var obj = JSON.parse(JSON.stringify(res[i]));\n                var sap: sapling;\n                if (obj.Decs != null && obj.Special != null)\n                    sap =\n                        {\n                            lat: obj.lat,\n                            long: obj.long,\n                            decs: obj.Decs.split(\" \"),\n                            special: obj.Special.split(\" \"),\n                            hidden: obj.hidden\n\n                        };\n                else if (obj.Decs != null)\n                    sap =\n                        {\n                            lat: obj.lat,\n                            long: obj.long,\n                            decs: obj.Decs.split(\" \"),\n                            special: [],\n                            hidden: obj.hidden\n\n                        };\n                else if (obj.Special != null)\n                    sap =\n                        {\n                            lat: obj.lat,\n                            long: obj.long,\n                            decs: [],\n                            special: obj.Special.split(\" \"),\n                            hidden: obj.hidden\n\n                        };\n                else\n                    sap =\n                        {\n                            lat: obj.lat,\n                            long: obj.long,\n                            decs: [],\n                            special: [],\n                            hidden: obj.hidden\n\n                        };\n                this.saplings.push(sap);\n\n            }\n            console.log(this.saplings);\n            this.plantTrees(this.saplings);\n            console.log('here2')\n            this.mapSetUp();\n            //this.getTreeMarks();\n            console.log(\"here3\")\n            this.updateTreeMarks(this.tree_list);\n            console.log(\"here4\")\n            this.createLocWatcher();\n            // this.updateUserMark(this.userLoc);\n\n        });\n    }\n\n    /*\n        here is where the map object is initialized\n        it is centered and zoomed in to an appropriate level and\n        contained in the appropriate bounds\n        and populated with all the markers\n    */\n    mapSetUp() {\n\n        //here is where the phone's geolocation is first defined\n        //there is also an error function just incase the setup was unsuccessful\n        //var userLoc = undefined;\n        let userLoc;\n        this.geolocation.getCurrentPosition({ timeout: 10000, enableHighAccuracy: true }).then((position) => {\n\n            userLoc = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n\n        }).catch((error) => {\n\n            console.log('problem getting location', error);\n            alert('code: ' + error.code + '\\n'\n                + 'message: ' + error.message + '\\n');\n            userLoc = undefined;\n        });\n\n        //here is where the map is initialized, if the user's geolocation is defined and within mapBounds, \n        //then it is the map's center, otherwise the default center is used\n        let options = {\n            center: (userLoc !== undefined && this.mapBounds.contains(this.userLoc)) ? this.userLoc : this.areaCenter,\n            zoom: 17,\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\n            disableDefaultUI: true\n        }\n\n        this.map = new google.maps.Map(document.getElementById(\"map\"), options);\n\n        //this.map.setCompassEnabled(true);\n\n    }\n\n    updateTreeMarks(trees) {\n\n        //ONLY WORKS IF evergreen.png AND deciduous.png ARE IN THE ICON FOLDER IN ASSETS\n        var everImage = {\n            url: 'assets/icon/evergreen.png',\n            size: new google.maps.Size(36, 43),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(20, 43)\n        }\n\n        var decidImage = {\n            url: 'assets/icon/deciduous.png',\n            size: new google.maps.Size(32, 40),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(16, 40)\n        }\n\n        for (let tree of trees) {\n\n            if (!tree.hidden) {\n                var loc = new google.maps.LatLng(tree.lat, tree.long);\n                var treeMark = new google.maps.Marker({\n                    position: loc,\n                    map: this.map,\n                    icon: (tree.collectData().pinecone)\n                        ? everImage\n                        : decidImage\n                });\n            }\n        }\n    }\n\n    /*\n       this funtion updates the user's location marker\n       but only if the user is within the bounds of the playing field\n    */\n    updateUserMark(userLoc) {\n        //get rid of preveous marker\n        if (this.userMark) this.userMark.setMap(null);\n\n        //test if the user's position is within the bounds and update with a new marker \n        //if it is\n        if (userLoc !== undefined && this.mapBounds.contains(userLoc)) {\n            this.userMark = new google.maps.Marker({\n                position: userLoc\n            });\n            this.userMark.setMap(this.map);\n\n        }\n\n    }\n\n    /*\n        here is where we set up a \"position watcher\" that should listen to a \n        change in the user's location and update the user's\n        marker accordingly\n    */\n    createLocWatcher() {\n        this.locWatcher = this.geolocation.watchPosition({ enableHighAccuracy: true })\n            .filter((p) => p.coords !== undefined)\n            .subscribe(position => {\n                console.log(\"init user loc\");\n                this.userLoc =\n                    {\n                        lat: position.coords.latitude,\n                        long: position.coords.longitude\n                    }\n                console.log(\"user loc done\")\n                let newUserLoc = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                this.updateUserMark(newUserLoc);\n                //this.revealHidden();\n            });\n    }\n\n    //tree search-----------------------------------------------------------------------------------------------------\n    /*\n        here is where the the app checks if it needs to reveal a \n        nearby hidden tree\n    */\n    revealHidden() {\n\n        let farProxim = 60;\n\n        let nearProxim = 20;\n\n        let closest = this.findTree(true);\n\n        if (closest !== undefined) {\n            let proxim = this.inProximity(closest);\n            if (proxim <= nearProxim) {\n                this.alertMessage(1);\n                var loc = new google.maps.LatLng(this.tree_list[closest.ind].lat,\n                    this.tree_list[closest.ind].long);\n                var treeMark = new google.maps.Marker({\n                    position: loc,\n                    //title: trees.name,\n                    map: this.map\n                    //icon: image\n                });\n                //make the hidden value in the database false\n                //notify everyone else that a tree has been found\n            } else if (proxim <= farProxim) {\n                this.hintToast({\n                    pro: proxim,\n                    dir: closest.direct\n                })\n            }\n        } else {\n            this.hintToast(undefined);\n        }\n\n    }\n\n    hintToast(hints) {\n        let toastMessg = (hints === undefined)\n            ? 'No hidden trees anywhere near you right now'\n            : 'The closest hidden tree is ' + hints.pro + 'feet away to the ' + hints.dir + '!!';\n\n        let toast = this.toastCtrl.create({\n            message: toastMessg,\n            duration: 4000,\n            position: 'middle',\n            dismissOnPageChange: true\n        });\n\n        toast.present();\n    }\n\n    /*\n        this function, attached with an on click listener to\n        a button in the HTML page, allows the user to observe the\n        nearest tree, if possible\n    */\n    observeNearest() {\n\n        let proxim = 6;\n\n        let closest = this.findTree(false);\n        console.log(\"here in observe    \");\n        console.log(this.tree_list[closest.ind]);\n        if (closest !== undefined && this.inProximity(closest) <= proxim) {\n            //this should be the part where we take the user to the data collection screen \n            //which is showing collection options based on the specific tree\n            this.collectData(closest.ind);\n        } else {\n            //this message is generic\n            this.alertMessage(2);\n        }\n\n    }\n\n    collectData(treeindex: number) {\n        let tosend = this.tree_list[treeindex].collectData();\n        console.log(this.tree_list[treeindex]);\n        this.navCtrl.push(Graphs, { params: tosend });\n    }\n\n    /*\n        this function returns the tree closest to the user \n        if any, the flag parameter (true or false) tells us\n        whether to look for a hidden tree or visible tree\n    */\n    findTree(hiddenFlag) {\n        let minLatDist = 100000;\n        let minLngDist = 100000;\n        let yDist;\n        let xDist;\n        let targetInd = -1;\n        let index = 0;\n        let direct1 = \"\";\n        let direct2 = \"\";\n        let userlat = this.userLoc.lat;\n        let userlong = this.userLoc.long;\n       /* this.geolocation.getCurrentPosition({ timeout: 10000, enableHighAccuracy: true }).then((position) => {\n\n            userlat = position.coords.latitude;\n            userlong = position.coords.longitude\n\n        }).catch((error) => {\n\n            console.log('problem getting location', error);\n            alert('code: ' + error.code + '\\n'\n                + 'message: ' + error.message + '\\n');\n        });*/\n\n        console.log(this.userLoc);\n        console.log(\"here\");\n        //find the closest visible tree from the list of trees\n        for (let tree of this.tree_list) {\n            //the distance between the two latitudes\n            //TODO replave with actual cords\n\n            if (userlat > tree.lat) {\n\n                yDist = userlat - tree.lat;\n                direct1 = \"South\";\n            } else {\n                console.log()\n                yDist = tree.lat - userlat;\n                direct1 = \"North\";\n            }\n            //the distance between the two longitudes\n            if (userlong > tree.long) {\n                xDist = userlong - tree.long;\n                direct2 = \"West\";\n            } else {\n                xDist = tree.long - userlong;\n                direct2 = \"East\";\n            }\n            //make this tree the closest if it appears closer\n            if (yDist < minLatDist &&\n                xDist < minLngDist &&\n                tree.hidden === hiddenFlag) {\n                targetInd = index;\n                minLatDist = yDist;\n                minLngDist = xDist;\n            }\n\n            index++;\n\n        }\n\n        if (targetInd >= -1) {\n            return {\n                ind: targetInd,\n                latDist: yDist,\n                lngDist: xDist,\n                direct: direct1 + direct2\n            };\n        } else {\n            return undefined;\n        }\n\n\n    }\n\n    /*\n       this function returns the distance a user is from a tree\n   */\n    inProximity(closest) {\n        /*let a = closest.latDist * closest.latDist;\n        let b = closest.lngDist * closest.lngDist;\n        let squaredDist = a+b;\n        return Math.sqrt(squaredDist);*/\n        console.log(\"promixty\")\n        let ind = closest.ind;\n        console.log(\"inde is \" + ind);\n        console.log(\"promiimity = 1\")\n\n        let treeLoc = new google.maps.LatLng(this.tree_list[ind].lat, this.tree_list[ind].long);\n        console.log();\n        let myLoc = new google.maps.LatLng(this.userLoc.lat, this.userLoc.long);\n        console.log(myLoc);\n        console.log(\"prox \")\n        let thing = google.maps.geometry.spherical.computeDistanceBetween(myLoc, treeLoc);\n        console.log(thing);\n        return thing\n\n    }\n\n    alertMessage(num) {\n\n        let titleStr = (num === 1) ? 'New Tree Available' : 'Can\\'t Collect Data';\n        let subStr = (num === 1)\n            ? 'A new Tree has been discovered, hurry and make some observations on it!'\n            : 'You aren\\'t within the range of any of the trees on the map';\n\n        let alert = this.alertCtrl.create({\n            title: titleStr,\n            subTitle: subStr,\n            buttons: ['OK']\n        });\n\n        alert.present();\n    }\n\n}\n\n//END OF BOTANIMAP--------------------------------------------------------------------------------------------------\n\nexport interface DataParams {\n    falling: boolean,\n    flowering: boolean,\n    fruiting: boolean,\n    pinecone: boolean\n    special: Array<string>\n}\n\ninterface userPair {\n    lat: number,\n    long: number\n}\n\n\nexport class Tree {\n    lat: number;\n    long: number;\n    child_tree: DecoratorTree;\n    _special_events: string[];\n    _number_of_events: number;\n    hidden: boolean;\n    _params: DataParams;\n\n    constructor(lat: number, long: number, child_tree: DecoratorTree, special_events: string[], hidden: boolean) {\n        this.lat = lat;\n        this.long = long;\n        this.child_tree = child_tree;\n        this._special_events = special_events;\n        this._number_of_events = special_events.length;\n        this.hidden = hidden;\n        this._params =\n            {\n                falling: false,\n                fruiting: false,\n                flowering: false,\n                pinecone: false,\n                special: special_events\n            }\n\n    }\n\n    // Returns the paramaters for data collection\n    public collectData(): DataParams {\n        this.prepParams();\n        return this._params;\n    }\n\n    // Checks to see if collection is leagal\n    public canCollect(curLat: number, curLong: number): boolean {\n        // TODO get user location and test to see if in bounds\n        return true;\n    }\n\n    // Reports any special events occuring on the tree\n    public get special_events(): string[] {\n        return this._special_events;\n    }\n\n    // Reports the number of events on a tree\n    public get number_of_events(): number {\n        return this._number_of_events;\n    }\n\n    // Gets the proper parameters of each decorator and\n    // uses them to creat a DataParams interface\n    public prepParams(): void {\n        let raw_params = this.child_tree.getParams().split('.');\n        while (raw_params.length != 0) {\n            switch (raw_params.pop()) {\n                case 'fl':\n                    this._params.falling = true;\n                    break;\n                case 'fw':\n                    this._params.flowering = true;\n                    break;\n                case 'fr':\n                    this._params.fruiting = true;\n                    break;\n                case 'pn':\n                    this._params.pinecone = true;\n                    break;\n            }\n        }\n    }\n}\n\n// DecoratorTree objects are the child_trees of the concrete tree class\n// There function is to call the specific collectData methods for each data point\nexport abstract class DecoratorTree {\n\n    child_tree: DecoratorTree;\n    params: string;\n\n\n    constructor(child_tree: DecoratorTree) {\n        this.child_tree = child_tree;\n        this.params = \"\";\n    }\n\n    public getParams(): string {\n        return this.collectData();\n    }\n\n    public abstract collectData(): string;\n\n}\n\n/*------NEW DECORATORS MUST BE IMPLEMENTED TO EXTEND DECORATOR TREE------*/\n\nexport class FallingTree extends DecoratorTree {\n    public collectData(): string {\n        if (this.child_tree !== null) {\n            return \"fl.\" + this.child_tree.collectData()\n        }\n        return \"fl\";\n\n    }\n}\n\nexport class FrutingTree extends DecoratorTree  /*******SPELLING ERROR********/ {\n\n    public collectData(): string {\n        if (this.child_tree !== null) {\n            return \"fr.\" + this.child_tree.collectData()\n        }\n        return \"fr\";\n    }\n}\n\nexport class FloweringTree extends DecoratorTree {\n\n    public collectData(): string {\n        if (this.child_tree !== null) {\n            return \"fw.\" + this.child_tree.collectData()\n        }\n        return \"fw\";\n    }\n\n}\n\nexport class PineConeTree extends DecoratorTree {\n\n    public collectData(): string {\n        if (this.child_tree !== null) {\n            return \"pn.\" + this.child_tree.collectData()\n        }\n        return \"pn\";\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/map/map.ts","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar filter_1 = require('../../operator/filter');\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/operator/filter.js\n// module id = 1072\n// module chunks = 0"],"sourceRoot":""}